{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\resources\\Prefab\\Player/assets\\resources\\Prefab\\Player\\Player_1.js"],"names":["cc","Class","extends","Component","properties","Map","default","type","Node","displayName","onLoad","Node_Animation","Player_to_obstacle","start","TurnStatic","TurnUp","TurnRight","TurnDown","TurnLeft","update","dt","anim","node","getComponent","Animation","animState1","getAnimationState","getClips","name","playing1","isPlaying","animState2","playing2","animState3","playing3","animState4","playing4","stop","newVec2","find","convertToWorldSpaceAR","v2","height","collider","director","getPhysicsManager","testPoint","log","y","play","width","x"],"mappings":"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","file":"Player_1.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\resources\\Prefab\\Player","sourcesContent":["﻿cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Map: {\r\n            default: null,\r\n            type: cc.Node,\r\n            displayName: \"运动目标地图\"\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.Node_Animation = 0;\r\n        //物理组件开启\r\n        //cc.director.getPhysicsManager().enabled = true;\r\n        //cc.director.getPhysicsManager().debugDrawFlags = 0;\r\n        //cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\r\n        //                                            cc.PhysicsManager.DrawBits.e_pairBit |\r\n        //                                            cc.PhysicsManager.DrawBits.e_centerOfMassBit |\r\n        //                                            cc.PhysicsManager.DrawBits.e_jointBit |\r\n        //                                            cc.PhysicsManager.DrawBits.e_shapeBit;\r\n\r\n        this.Player_to_obstacle = false;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    TurnStatic() {\r\n        this.Node_Animation = 0;\r\n    },\r\n    TurnUp() {\r\n        this.Node_Animation = 1;\r\n    },\r\n    TurnRight() {\r\n        this.Node_Animation = 2;\r\n    },\r\n    TurnDown() {\r\n        this.Node_Animation = 3;\r\n    },\r\n    TurnLeft() {\r\n        this.Node_Animation = 4;\r\n    },\r\n    update(dt) {\r\n        //获取动画列表\r\n        let anim = this.node.getComponent(cc.Animation);\r\n        //获取是否在播放动画，播放哪个动画\r\n        //上\r\n        let animState1 = anim.getAnimationState(anim.getClips()[0].name);\r\n        let playing1 = animState1.isPlaying;\r\n        //右\r\n        let animState2 = anim.getAnimationState(anim.getClips()[1].name);\r\n        let playing2 = animState2.isPlaying;\r\n        //下\r\n        let animState3 = anim.getAnimationState(anim.getClips()[2].name);\r\n        let playing3 = animState3.isPlaying;\r\n        //左\r\n        let animState4 = anim.getAnimationState(anim.getClips()[3].name);\r\n        let playing4 = animState4.isPlaying;\r\n        //行走动画播放\r\n        if (this.Node_Animation == 0) {\r\n            anim.stop();\r\n        };\r\n        if (this.Node_Animation == 1) {\r\n            //let force = cc.v2(0, -1000);\r\n            //this.Map.getComponent(cc.RigidBody).applyForceToCenter(force);\r\n            let newVec2 = cc.find(\"Canvas\").convertToWorldSpaceAR(cc.v2(0, this.node.height));\r\n            let collider = cc.director.getPhysicsManager().testPoint(newVec2);\r\n            //cc.log('newVec2: ' + newVec2 + 'obstacle: ' + cc.find(\"Canvas/Map/obstacle\").getComponent(cc.RigidBody).getWorldPosition());\r\n            cc.log('name: ' + collider);\r\n            if (collider) {\r\n                //cc.log('newVec2: ' + newVec2 + 'obstacle: ' + cc.find(\"Canvas/Map/win_white\").getComponent(cc.RigidBody).getWorldPosition());\r\n                //cc.log('name: ' + collider.node.name);\r\n                if (collider.node.name == 'obstacle') {\r\n                    this.Player_to_obstacle = true;\r\n                }\r\n            }\r\n            if (!this.Player_to_obstacle) {\r\n                this.Map.y += -200 * dt;\r\n            };\r\n            if (!playing1) {\r\n                anim.play(anim.getClips()[0].name);\r\n            };\r\n        };\r\n        if (this.Node_Animation == 2) {\r\n            let newVec2 = cc.find(\"Canvas\").convertToWorldSpaceAR(cc.v2(this.node.width, 0));\r\n            let collider = cc.director.getPhysicsManager().testPoint(newVec2);\r\n            if (collider) {\r\n                if (collider.node.name == 'obstacle') {\r\n                    this.Player_to_obstacle = true;\r\n                }\r\n            }\r\n            if (!this.Player_to_obstacle) {\r\n                this.Map.x += -200 * dt;\r\n            };\r\n            if (!playing2) {\r\n                anim.play(anim.getClips()[1].name);\r\n            };\r\n        };\r\n        if (this.Node_Animation == 3) {\r\n            let newVec2 = cc.find(\"Canvas\").convertToWorldSpaceAR(cc.v2(0, -this.node.height));\r\n            let collider = cc.director.getPhysicsManager().testPoint(newVec2);\r\n            if (collider) {\r\n                if (collider.node.name == 'obstacle') {\r\n                    this.Player_to_obstacle = true;\r\n                }\r\n            }\r\n            if (!this.Player_to_obstacle) {\r\n                this.Map.y += 200 * dt;\r\n            };\r\n            if (!playing3) {\r\n                anim.play(anim.getClips()[2].name);\r\n            };\r\n        };\r\n        if (this.Node_Animation == 4) {\r\n            let newVec2 = cc.find(\"Canvas\").convertToWorldSpaceAR(cc.v2(-this.node.width, 0));\r\n            let collider = cc.director.getPhysicsManager().testPoint(newVec2);\r\n            if (collider) {\r\n                if (collider.node.name == 'obstacle') {\r\n                    this.Player_to_obstacle = true;\r\n                }\r\n            };\r\n            if (!this.Player_to_obstacle) {\r\n                this.Map.x += 200 * dt;\r\n            };\r\n            if (!playing4) {\r\n                anim.play(anim.getClips()[3].name);\r\n            };\r\n        };\r\n        //cc.find('Canvas/Map/obstacle').getComponent(cc.RigidBody).syncPosition(true);\r\n    },\r\n});\r\n"]}